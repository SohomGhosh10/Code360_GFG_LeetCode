/*You are given an array/list 'ARR' consisting of 'N' non - negative integers. Your task is to return the running absolute difference of the elements at even and odd index positions separately.

The index of the first element in the array is considered to be zero that is 0 - based indexing is considered for calculating the parity of the index.

Example:

Consider the array - [1, 2, 3, 4, 5, 6]
The elements at even positions will be 1, 3, 5. The running absolute difference of elements will be - 
|1 - 3| = 2 , |2 -5| = 3. Hence our answer will be 3.

The elements at odd positions will be 2, 4, 6. The running absolute difference of elements will be - 
|2 - 4| = 2 , |2 - 6| = 4. Hence our answer will be 4.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
 1 <= T <= 10
 1 <= N <= 5 * 10^4
 1 <= ARR[i] <=10^5

Time Limit: 1 sec
Sample Input 1:
2
5
5 4 3 4 2
4
3 5 3 1
Sample Output 1:
0 0
0 4.
Explanation of Input 1:
For test case 1:
• The running absolute difference of elements at even positions will be : |5 - 3| = 2, |2 - 2| = 0.
• The running absolute difference of elements at odd positions will be : |4 - 4| = 0.
For test case 2:
• The running absolute difference of elements at even positions will be : |3 - 3| = 0.
• The running absolute difference of elements at odd positions will be : |5 - 1| = 4.
Sample Input 2:
1
7
10 20 30 40 50 60 70
Sample Output 2:
40 40
Python (3.5)
00
 : 
19
 : 
09
3456789101112131415161718192021222324252627281
*/



from os import *
from sys import *
from collections import *
from math import *

def absDiff(arr, n):

    # Write your code here.
    even_indices = []
    odd_indices = []

    for i in range(n):
        if i % 2 == 0:
            even_indices.append(arr[i])
        else:
            odd_indices.append(arr[i])
    
    even_diff = 0
    for i in range(1 , len(even_indices)):
        even_diff += abs(even_indices[i] - even_indices[i-1])
    
    odd_diff = 0
    for i in range(1 , len(odd_indices)):
        odd_diff += abs(odd_indices[i] - odd_indices[i-1])
    
    return even_diff , odd_diff

    pass
